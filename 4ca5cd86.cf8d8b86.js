(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{69:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t(2),i=t(6),r=(t(0),t(93)),l={id:"lua-ref-variables-and-assignment",title:"Variables & Assignment",sidebar_label:"Variables & Assignment",slug:"/lua-reference/variables-and-assignment"},o={unversionedId:"lua-ref-variables-and-assignment",id:"lua-ref-variables-and-assignment",isDocsHomePage:!1,title:"Variables & Assignment",description:"Variables and",source:"@site/docs/lua-ref_1_2_variables_and_assignment.md",slug:"/lua-reference/variables-and-assignment",permalink:"/civ-vi-modding/docs/lua-reference/variables-and-assignment",editUrl:"https://github.com/JonathanTurnock/civ-vi-modding/edit/master/website/docs/lua-ref_1_2_variables_and_assignment.md",version:"current",sidebar_label:"Variables & Assignment",sidebar:"someSidebar",previous:{title:"Installation",permalink:"/civ-vi-modding/docs/lua-reference/installation"},next:{title:"Reference",permalink:"/civ-vi-modding/docs/reference"}},c=[{value:"Global",id:"global",children:[]},{value:"Local",id:"local",children:[]},{value:"A Note on Scope",id:"a-note-on-scope",children:[]},{value:"References",id:"references",children:[]}],s={rightToc:c};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.w3schools.com/js/js_variables.asp"}),"Variables")," and\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.w3schools.com/js/js_assignment.asp"}),"Assignments")," are very generic\nterms in programming, if they are not familiar I recommend checking some resources."),Object(r.b)("p",{parentName:"div"}," Don't overcomplicate things though, ",Object(r.b)("strong",{parentName:"p"},"variables")," are names, ",Object(r.b)("strong",{parentName:"p"},"assignment")," is the act of point at\nthings with those names."))),Object(r.b)("p",null,"In Lua we have two types of Variables, Global and Local"),Object(r.b)("h2",{id:"global"},"Global"),Object(r.b)("p",null,"Global Variables are declared with a simple assignment statement, no keywords needed."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),'helloWorldMessage = "Hello World"\nprint(helloWorldMessage) --\x3e> Hello World\n')),Object(r.b)("p",null,"It is also possible to just reference them without declaration, but you get a ",Object(r.b)("inlineCode",{parentName:"p"},"nil")," return value"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"print(nothingHere) --\x3e> nil\n")),Object(r.b)("p",null,"You can also assign ",Object(r.b)("inlineCode",{parentName:"p"},"nil")," to a variable which has the effect of deleting the value via de-reference."),Object(r.b)("p",null,"De-referenced values are cleaned up by the automatic memory management provided by Lua."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),'helloWorldMessage = "Hello World"\nprint(helloWorldMessage) --\x3e> Hello World\n\nhelloWorldMessage = nil\nprint(helloWorldMessage) --\x3e> nil\n')),Object(r.b)("p",null,"To give an example of this in action lets create two files."),Object(r.b)("p",null,"First we create a file with 1 Global variable ",Object(r.b)("inlineCode",{parentName:"p"},"PI")," with the value of ",Object(r.b)("inlineCode",{parentName:"p"},"3.14159")," assigned to it"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"--- constants.lua\nPI = 3.14159\n")),Object(r.b)("p",null,"If we try to reference it we cannot, we will get ",Object(r.b)("inlineCode",{parentName:"p"},"nil")," as a result, however once we reference it\nafter\nthe ",Object(r.b)("inlineCode",{parentName:"p"},"constants.lua")," is imported it works as expected."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),'---printPi.lua\n-- Reference Before Import\nprint(PI) --\x3e> nil\n\n-- Import Constants\ndofile("constants.lua")\n\n-- Reference after import\nprint(PI) --\x3e> 3.14159\n')),Object(r.b)("h2",{id:"local"},"Local"),Object(r.b)("p",null,"Local variables are declared using the ",Object(r.b)("inlineCode",{parentName:"p"},"local")," key word"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"local halfPi = PI/2\nprint(halfPi)\n")),Object(r.b)("p",null,"Local variables are slightly different to global in that they are only accessible from within the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#a-note-on-scope"}),"scope"),"."),Object(r.b)("p",null,"We will bring our two files back but let's add local before the variable ",Object(r.b)("inlineCode",{parentName:"p"},"PI")," and a print\nstatement after its declaration."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"--- constants.lua\nlocal PI = 3.14159\nprint(PI) --\x3e> 3.14159\n")),Object(r.b)("p",null,"When we now try and access the variable ",Object(r.b)("inlineCode",{parentName:"p"},"PI")," after the import we still get a ",Object(r.b)("inlineCode",{parentName:"p"},"nil")," value"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),'---printPi.lua\n-- Reference Before Import\nprint(PI) --\x3e> nil\n\n-- Import Constants\ndofile("constants.lua")\n\n-- Reference after import\nprint(PI) --\x3e> nil\n')),Object(r.b)("p",null,"This is because local variable is not accessible outside the file."),Object(r.b)("p",null,"If we run this program we get the following output in the console, the first print comes from the\n",Object(r.b)("inlineCode",{parentName:"p"},"printPi.lua")," at line 3, the second comes from ",Object(r.b)("inlineCode",{parentName:"p"},"constants.lua")," at line 2, the third comes from\n",Object(r.b)("inlineCode",{parentName:"p"},"printPi.lua")," at line 9"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"lua.exe helloWorld.lua\nnil\n3.14159\nnil\n")),Object(r.b)("h2",{id:"a-note-on-scope"},"A Note on Scope"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Scope is quite a complex topic, but it's critical to understand at least the fundamental concept\nbefore declaring a single variable.")),Object(r.b)("p",null,"At its core something is scoped when it exists only for a specific block of code."),Object(r.b)("p",null,"The first scope you encounter is the file itself. Then any functions/control structures (for\nloops etc)"),Object(r.b)("p",null,"Consider this example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),"--<< Top Level Scope Starts\nprint(pi) --\x3e> nil\nprint(localPi) --\x3e> nil\n\nfunction definePI() --<< Function Scope Starts\n    pi = 3.14\n    local localPi = 3.14\n    print(pi) --\x3e> 3.14\n    print(localPi) --\x3e> 3.14\nend --<< Function Scope Ends\n\ndefinePI()\nprint(pi) --\x3e> 3.14\nprint(localPi) --\x3e> nil\n--<< Top Level Scope Ends\n")),Object(r.b)("p",null,"The variable ",Object(r.b)("inlineCode",{parentName:"p"},"localPi")," is limited to the scope of the function ",Object(r.b)("inlineCode",{parentName:"p"},"definePi"),", when we leave the function\nthe variable no longer exists and is not accessible, it is said to be scoped, the Variable ",Object(r.b)("inlineCode",{parentName:"p"},"pi"),"\nhowever is ",Object(r.b)("strong",{parentName:"p"},"NOT")," and we can access it after calling the function."),Object(r.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"It may not be obvious but there is a glaring issue here, often languages when defining a variable\nlike we do with ",Object(r.b)("inlineCode",{parentName:"p"},"pi = 3.14")," limit this to only be accessible inside the function, meaning in\nlarge scripts you don't get random collisions, that's not the case here, if for example we had\ndefined pi as ",Object(r.b)("inlineCode",{parentName:"p"},"3.14159")," at the start, then it was replaced inside a function by accident to ",Object(r.b)("inlineCode",{parentName:"p"},"3.14"),"\nwe have just lost a lot of precision!"),Object(r.b)("p",{parentName:"div"},"   ",Object(r.b)("strong",{parentName:"p"},"LESSON: USE ",Object(r.b)("inlineCode",{parentName:"strong"},"local")," VARIABLES UNLESS YOU EXPLICITLY WANT ",Object(r.b)("inlineCode",{parentName:"strong"},"global")," ONES")))),Object(r.b)("h2",{id:"references"},"References"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.lua.org/pil/1.1.html"}),"Programming in Lua - 1.1 Chunks")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.lua.org/pil/1.2.html"}),"Programming in Lua - 1.2 Global Variables")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.lua.org/pil/4.2.html"}),"Programming in Lua - 4.2 Local Variables and Blocks"))))}b.isMDXComponent=!0},93:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return u}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),b=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=b(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(t),m=a,u=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return t?i.a.createElement(u,o(o({ref:n},s),{},{components:t})):i.a.createElement(u,o({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=t[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);